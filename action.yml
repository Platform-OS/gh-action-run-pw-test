name: 'Run Playwright tests'
description: 'Run Playwright tests and upload the report'
inputs:
  test-name:
    description: 'test name'
    required: true
  before:
    required: false
  after:
    required: false
  skip:
    required: false
  npm-prefix:
    required: false
    default: "."
runs:
  using: "composite"
  steps:

      - name: before ${{ inputs.test-name }}
        if: ${{ inputs.before && !inputs.skip }}
        shell: sh
        run: |
          ${{ inputs.before }}

      - name: run ${{ inputs.test-name }}
        if: ${{ !inputs.skip }}
        shell: sh
        run: |
          npm run ${{ inputs.test-name }} --prefix ${{ inputs.npm-prefix }}
        env:
          HOME: /root

      - name: after ${{ inputs.test-name }}
        if: ${{ inputs.after && !inputs.skip }}
        shell: sh
        run: |
          ${{ inputs.after }}

      - name: set timestamp
        id: set-timestamp
        if: ${{ !inputs.skip }}
        shell: sh
        run: |
          TIMESTAMP=$(date '+%Y%m%d%H%M%S')
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_OUTPUT
          echo "PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL=${{ env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL }}/$TIMESTAMP" >> $GITHUB_OUTPUT

      - name: publish report ${{ inputs.test-name }}
        id: publish-report
        env:
          MPKIT_TOKEN: ${{ env.TEST_REPORT_MPKIT_TOKEN }}
          MPKIT_URL:  ${{ env.TEST_REPORT_MPKIT_URL }}
          PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL: ${{ steps.set-timestamp.outputs.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL }}
        if:  ${{ !inputs.skip && always() }}
        shell: sh
        run: |
          set -eu
          TIMESTAMP=${{ steps.set-timestamp.outputs.TIMESTAMP }}
          PAGE_DIR=app/views/pages
          IMAGE_DIR=app/assets/images/playwright-report/$TIMESTAMP

          cd ./playwright-report
          if [ -d "./data" ]; then
              mkdir -p $IMAGE_DIR
              mv ./data/* $IMAGE_DIR
          fi
          mkdir -p $PAGE_DIR
          mv ./index.html $PAGE_DIR/$TIMESTAMP.liquid

          pos-cli deploy -p

          URL=$MPKIT_URL/$TIMESTAMP
          echo "REPORT_URL=$URL" >> $GITHUB_OUTPUT
          echo "pw-tests-report-url=$URL" >> $GITHUB_OUTPUT

      - name: remove report directory
        if:  ${{ !inputs.skip && always() }}
        shell: sh
        run: |
          rm -rf playwright-report

      - name: summary
        if:  ${{ !inputs.skip && always() }}
        shell: sh
        run: |
          echo "### TEST REPORT" >> $GITHUB_STEP_SUMMARY
          echo "#### Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "#### Test report URL: ${{ steps.publish-report.outputs.REPORT_URL }}" >> $GITHUB_STEP_SUMMARY

      - name: skip ${{ inputs.test-name }}
        if: ${{ !!inputs.skip }}
        shell: sh
        run: echo skipping ${{ inputs.test-name }}

