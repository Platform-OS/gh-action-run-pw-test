name: 'Run Playwright tests'
description: 'Run Playwright tests and upload the report'
inputs:
  test-name:
    description: 'test name'
    required: true
  before:
    required: false
  after:
    required: false
  skip:
    required: false
  npm-prefix:
    required: false
    default: "."
runs:
  using: "composite"
  steps:

    - name: before ${{ inputs.test-name }}
      if: ${{ inputs.before && !inputs.skip }}
      shell: sh
      run: |

    - name: after ${{ inputs.test-name }}
      if: ${{ inputs.after && !inputs.skip }}
      shell: sh
      run: |
        ${{ inputs.after }}
        ${{ inputs.before }}

    - name: generate timestamp
      id: timestamp
      if:  ${{ !inputs.skip && always() }}
      shell: sh
      run: |
        echo "TIMESTAMP=$(date '+%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

    - name: set url for playwright attachments
      id: set-playwright-html-attachments-base-url
      if:  ${{ !inputs.skip && always() }}
      shell: sh
      run: |
        echo "PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL=${{ env.HTML_ATTACHMENTS_BASE_URL }}/${{ steps.timestamp.outputs.TIMESTAMP }}/data/" >> $GITHUB_ENV

    - name: run ${{ inputs.test-name }}
      id: run-tests
      if: ${{ !inputs.skip }}
      shell: sh
      run: |
        npm run ${{ inputs.test-name }} --prefix ${{ inputs.npm-prefix }}
      env:
        PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL: ${{ env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL }}

    - name: publish report ${{ inputs.test-name }}
      id: publish-report
      env:
        MPKIT_TOKEN: ${{ env.TEST_REPORT_MPKIT_TOKEN }}
        MPKIT_URL:  ${{ env.TEST_REPORT_MPKIT_URL }}
        PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL: ${{ env.PLAYWRIGHT_HTML_ATTACHMENTS_BASE_URL }}
      if:  ${{ !inputs.skip && always() }}
      shell: sh
      run: |
        set -eu
        TIMESTAMP=${{ steps.timestamp.outputs.TIMESTAMP }}
        PAGE_DIR=app/assets/$TIMESTAMP

        cd ./playwright-report

        mkdir -p $PAGE_DIR
        mv ./index.html $PAGE_DIR/index.html

        if [ -d "./data" ]; then
            mv ./data/ $PAGE_DIR/data
        fi

        pos-cli deploy -p

        URL=$MPKIT_URL/assets/$TIMESTAMP/index.html
        echo "REPORT_URL=$URL" >> $GITHUB_OUTPUT
        echo "pw-tests-report-url=$URL" >> $GITHUB_OUTPUT

    - name: remove report artifacts
      if:  ${{ !inputs.skip && always() }}
      shell: sh
      run: |
        rm -rf playwright-report
        rm -rf test-results

    - name: summary
      if:  ${{ !inputs.skip && always() }}
      shell: sh
      run: |
        echo "### TEST REPORT for ${{ inputs.test-name }}" >> $GITHUB_STEP_SUMMARY
        echo "#### Status: ${{ steps.run-tests.outcome }}" >> $GITHUB_STEP_SUMMARY
        echo "#### Test report URL: ${{ steps.publish-report.outputs.REPORT_URL }}" >> $GITHUB_STEP_SUMMARY

    - name: skip ${{ inputs.test-name }}
      if: ${{ !!inputs.skip }}
      shell: sh
      run: echo skipping ${{ inputs.test-name }}

